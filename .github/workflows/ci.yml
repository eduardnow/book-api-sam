name: AWS SAM Book API development

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: api/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('api/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: api

      - name: Run tests
        run: npm test
        working-directory: api
        env:
          TABLE_NAME: BooksTable

      - name: Build project
        run: npm run build
        working-directory: api

  validate:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate SAM template
        run: sam validate

  package:
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Package SAM application
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sam package

  deploy:
    runs-on: ubuntu-latest
    needs: package

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy SAM application
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: sam deploy --resolve-s3 --no-confirm-changeset