AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  BooksTableName:
    Type: String
    Default: BooksTable
    Description: "The name of the DynamoDB table for book management"
  BooksLambdaMemorySize:
    Type: Number
    Default: 128
    Description: "Memory size for the book management Lambda function"
  BooksStage:
    Type: String
    Default: prod
    Description: "Deployment stage for book management"

Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        TABLE_NAME: !Ref BooksTableName
        MY_AWS_REGION: !Ref AWS::Region

Resources:
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: books-api-artifacts-bucket

  BooksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: !Ref BooksTableName

  BooksApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: BooksApi
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: true

  BooksApiStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref BooksApi
      StageName: ProdStage
      MethodSettings:
        - ThrottlingBurstLimit: 100
          ThrottlingRateLimit: 50
          ResourcePath: "/*"
          HttpMethod: "*"

  BooksHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      CodeUri: ./api
      Runtime: nodejs18.x
      MemorySize: !Ref BooksLambdaMemorySize
      Role: !GetAtt BooksLambdaExecutionRole.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref BooksTable
          MY_AWS_REGION: !Ref AWS::Region
      Events:
        CreateBook:
          Type: Api
          Properties:
            Path: /books
            Method: post
            RestApiId: !Ref BooksApi
        ListBooks:
          Type: Api
          Properties:
            Path: /books
            Method: get
            RestApiId: !Ref BooksApi
        GetBook:
          Type: Api
          Properties:
            Path: /books/{id}
            Method: get
            RestApiId: !Ref BooksApi
        UpdateBook:
          Type: Api
          Properties:
            Path: /books/{id}
            Method: put
            RestApiId: !Ref BooksApi
        DeleteBook:
          Type: Api
          Properties:
            Path: /books/{id}
            Method: delete
            RestApiId: !Ref BooksApi
      AutoPublishAlias: BooksManagementLive

  BooksLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BooksCrudLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                Resource: !GetAtt BooksTable.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*

  BooksAlarmSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: BooksAlarmSNSTopic

  BooksCreateBookErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Alarm for CreateBook Lambda errors in book management"
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref BooksHandlerFunction
      Statistic: Sum
      Period: 900
      EvaluationPeriods: 3
      Threshold: 5
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - Ref: BooksAlarmSNSTopic

Outputs:
  BooksTableName:
    Description: "The name of the books DynamoDB table"
    Value: !Ref BooksTable

  BooksHandlerFunctionArn:
    Description: "ARN of the BooksHandler Lambda function"
    Value: !GetAtt BooksHandlerFunction.Arn

  BooksAlarmSNSTopicArn:
    Description: "ARN of the SNS Topic for Alarms in book management"
    Value: !Ref BooksAlarmSNSTopic